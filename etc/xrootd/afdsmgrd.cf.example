#
# afdsmgrd.cf.example - example configuration file for afdsmgrd.
#
# by Dario Berzano <dario.berzano@gmail.com>
#
# afdsmgrd is able to parse variables and needs to read the xpd.datasetsrc
# directive(s), so it is a good idea to merge this configuration with PROOF's
# one.
#

# Datasets management: the destpath: is the path that will be prefixed to any
# URL beginning with alien://
xpd.datasetsrc file url:/pool/datasets mss:root://$MASTER:1094 opt:Cq:Av:Ar: destpath:/alien rw=1

# At each loop the transfer queue is checked: sleep time between each loop, in
# seconds
dsmgrd.sleepsecs 30

# Every certain number of loops the information in the transfer queue is
# synchronized with the information inside the datasets
dsmgrd.scandseveryloops 10

# Maximum number of parallel staging commands to launch. For consistency, set it
# to the number of servers * the number of parallel transfers for each server
# (see oss.xfr). To accommodate some delay betwen a transfer's end and the
# beginning of a new transfer, think about adding some "overbooking"
dsmgrd.parallelxfrs 30

# Custom command to stage a single file. $URLTOSTAGE will be substituted with
# the file's URL when staging. Remember that this command has the environment
# set by afdsmgrd, so if you use xrdstagetool from xrootd you should set the
# $LD_LIBRARY_PATH properly when launching afdsmgrd. This command can be a
# generic command: afdsmgrd doesn't care about the return value, but it assumes
# the transfer went right when the stagecmd writes a line that begins with "OK"
# followed by a space on stdout (in any other case it thinks it has failed).
#Â Output on stderr is ignored
dsmgrd.stagecmd /path/to/xrootd/bin/xrdstagetool -d 0 $URLTOSTAGE

# Maximum number of files to place in the queue. If zero or if the directive is
# omitted, defaults to "no limit". It is strongly advised to put a limit in
# order to control the memory consumption.
dsmgrd.maxfilesinqueue 500

# This variable tells afdsmgrd how to contact one or more MonALISA server(s) to
# activate monitoring via ApMon. It supports two kinds of URLs:
#
#   http[s]://host/path/configuration_file.conf
#   apmon://[:password@]monalisahost[:8884]
#
# This means that you may pass either a file where to fetch the list of servers
# or directly a single server.
# If the variable is not set, MonALISA monitoring is disabled.
#dsmgrd.apmonurl apmon://193.206.184.58

# Since MonALISA organizes information in "clusters" and "hosts", here you can
# specify what to use as cluster prefix for monitoring datasets information. A
# default value is used if not given (see source code).
#dsmgrd.apmondsprefix PROOF::CAF::STORAGE_datasets

# Which datasets to process? Supports the wildcards syntax as implemented in the
# TDataSetManager class. This setting applies to all the dataset sources. Rarely
# used, you probably don't have to use it! 
#dsmgrd.processds /ALICE/*
